[{"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\index.js":"1","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\App.js":"3","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Product.js":"7","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\store.js":"10","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Message.js":"15","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\LoginScreen.js":"22","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\FormContainer.js":"23","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\RegisterScreen.js":"25","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ProfileScreen.js":"26","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ShippingScreen.js":"27"},{"size":593,"mtime":1610093015920,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1112,"mtime":1611668160180,"results":"31","hashOfConfig":"29"},{"size":414,"mtime":1608643140872,"results":"32","hashOfConfig":"29"},{"size":1447,"mtime":1611138553943,"results":"33","hashOfConfig":"29"},{"size":1061,"mtime":1609840579436,"results":"34","hashOfConfig":"29"},{"size":861,"mtime":1608726466760,"results":"35","hashOfConfig":"29"},{"size":1330,"mtime":1608719902428,"results":"36","hashOfConfig":"29"},{"size":4011,"mtime":1610257220681,"results":"37","hashOfConfig":"29"},{"size":1466,"mtime":1611669407884,"results":"38","hashOfConfig":"29"},{"size":1124,"mtime":1609678190595,"results":"39","hashOfConfig":"29"},{"size":362,"mtime":1609678252528,"results":"40","hashOfConfig":"29"},{"size":1239,"mtime":1609840872444,"results":"41","hashOfConfig":"29"},{"size":349,"mtime":1609848911338,"results":"42","hashOfConfig":"29"},{"size":296,"mtime":1609676512516,"results":"43","hashOfConfig":"29"},{"size":4004,"mtime":1610259524290,"results":"44","hashOfConfig":"29"},{"size":1210,"mtime":1611669438502,"results":"45","hashOfConfig":"29"},{"size":167,"mtime":1611669204712,"results":"46","hashOfConfig":"29"},{"size":1068,"mtime":1611669225346,"results":"47","hashOfConfig":"29"},{"size":2249,"mtime":1611306342993,"results":"48","hashOfConfig":"29"},{"size":846,"mtime":1611305674983,"results":"49","hashOfConfig":"29"},{"size":2294,"mtime":1611154083565,"results":"50","hashOfConfig":"29"},{"size":389,"mtime":1611122739520,"results":"51","hashOfConfig":"29"},{"size":3661,"mtime":1611306830097,"results":"52","hashOfConfig":"29"},{"size":3246,"mtime":1611149042033,"results":"53","hashOfConfig":"29"},{"size":3465,"mtime":1611307839139,"results":"54","hashOfConfig":"29"},{"size":2371,"mtime":1611669934016,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"kftwyy",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\index.js",[],["115","116"],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\App.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ProductScreen.js",["117"],"import React , {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport{listProductDetails} from '../actions/productActions'\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n       \r\n    const [qty,setQty] =useState(1)\r\n\r\n    const dispatch=useDispatch()\r\n        const productDetails=useSelector(state => state.productDetails)\r\n        const { loading, error, product} = productDetails\r\n\r\n        useEffect(() => {\r\n            dispatch(listProductDetails(match.params.id))\r\n        }, [dispatch, match])\r\n\r\n        const addToCartHandler = () =>{\r\n            history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n        }\r\n        return (\r\n    <>\r\n    <Link className='btn btn-dark my-3' to=\"/\">\r\n        Go Back\r\n    </Link>\r\n    {loading ? <Loader /> : error ? <Message variant ='danger'>{error}</Message>: \r\n    (<Row>\r\n        <Col md={6}>\r\n        <Image src={product.image} alt={product.name} fluid/>\r\n        </Col>\r\n        <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Price:$ {product.price}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description:{product.description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n        <Card>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>\r\n                            Price:\r\n                        </Col>\r\n                        <Col>\r\n                            <strong>\r\n                                ${product.price}\r\n                            </strong>\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>\r\n                            Status:\r\n                        </Col>\r\n                        <Col>\r\n                            {product.countInStock >0 ? 'In Stock' : 'Out of Stock'}\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock >0 && (\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Qty</Col>\r\n                            <Col>\r\n                                <Form.Control as='select' value={qty} onChange={(e) => \r\n                                setQty(e.target.value)}>\r\n                                   { [...Array(product.countInStock).keys()].map((x) =>(\r\n                                        <option key={x+1} value={x+1}>\r\n                                            {x+1}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                    <Button \r\n                    onClick={addToCartHandler}\r\n                    className='btn-block' \r\n                    type='button' disabled={product.countInStock === 0}>\r\n                        Add To Cart\r\n                    </Button>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Card>\r\n</Col>    </Row>\r\n    )}\r\n    </>     \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\store.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\CartScreen.js",["118","119","120"],"import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from '../actions/cartActions'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    \r\n    const productId=match.params.id\r\n    const qty= location.search ? Number(location.search.split('=')[1]) : 1\r\n   \r\nconst dispatch= useDispatch()\r\n\r\nconst cart= useSelector(state => state.cart)\r\nconst {cartItems} = cart\r\n\r\nuseEffect(() =>{\r\n    if (productId) {\r\n        dispatch(addToCart(productId, qty))\r\n    }\r\n    console.log(cartItems)\r\n}, [dispatch, productId, qty])\r\n\r\nuseEffect(() => {\r\n    console.log('hello')\r\n}, [])\r\n\r\nconst removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n}\r\n\r\nconst checkOutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n}\r\n    return (\r\n  \r\n        <Row>\r\n         {cartItems.length === 0? (<h1>cart is empty</h1> ) :\r\n         (\r\n             <>\r\n            <Col md={8}>\r\n                <h1> Shopping Cart</h1>\r\n             \r\n                    <ListGroup variant ='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                       <Link to ={`/product/${item.product}`}>{item.name}</Link> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        $ {item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control as='select' value={item.qty} onChange={(e) => \r\n                                dispatch(addToCart(item.product,Number( e.target.value)))}>\r\n                                   { [...Array(item.countInStock).keys()].map((x) =>(\r\n                                        <option key={x+1} value={x+1}>\r\n                                            {x+1}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() =>\r\n                                        removeFromCartHandler(item.product)}>\r\n                                            <i className= 'fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n               \r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2> Subtotal ({cartItems.reduce((acc,item)=> acc + item.qty, 0)}) items </h2> \r\n                            ${cartItems.reduce((acc,item) => acc + item.qty * item.price, 0). toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkOutHandler}>\r\n                                Proceed to Checkout \r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n</Col>\r\n</>\r\n          ) }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n\r\n","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\RegisterScreen.js",["121","122"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {login, register} from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const {loading, error, userInfo} = userRegister\r\n    \r\n    \r\nconst redirect= '/'\r\nuseEffect(() => {\r\n    if(userInfo){\r\n        history.push(redirect)\r\n    }\r\n}, [history, userInfo, redirect])\r\n\r\nconst submitHandler =(e) =>{\r\n    e.preventDefault()\r\n    if (password != confirmPassword){\r\n        setMessage('Password doesnot match')\r\n    } else{\r\n    dispatch(register(name, email, password))\r\n}\r\n}\r\n\r\n    return <>\r\n         <FormContainer>\r\n             <h1>Sign Up</h1>\r\n             {message && <Message variant ='danger'>{message}</Message>}\r\n           \r\n             {error && <Message variant ='danger'>{error}</Message>}\r\n             {loading && <Loader />}\r\n             <Form onSubmit={submitHandler}>\r\n                 <Form.Group controlId='name'>\r\n                     <Form.Label>Name</Form.Label>\r\n                     <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='email'>\r\n                     <Form.Label>Email Address</Form.Label>\r\n                     <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='password'>\r\n                     <Form.Label>Password</Form.Label>\r\n                     <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                     <Form.Label>Confirm Password</Form.Label>\r\n                     <Form.Control type='password' placeholder='Renter password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Button type='submit' variant='primary'>\r\n                     Register\r\n                 </Button>\r\n                 </Form>\r\n                 <Row className='py-3'>\r\n                     <Col>\r\n                         Have an account?{''} <Link to={redirect ? `/login?redirect= ${redirect}` : '/login'}>\r\n                             Login\r\n                         </Link>\r\n                     </Col>\r\n                 </Row>\r\n         </FormContainer>\r\n    </>\r\n}\r\nexport default RegisterScreen\r\n","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ProfileScreen.js",["123"],"import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n    \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo} = userLogin\r\n        \r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success} = userLogin\r\n\r\nuseEffect(() => {\r\n    if(!userInfo){\r\n        history.push('/login')\r\n    } else{\r\n        if(!user.name){\r\n            dispatch(getUserDetails('profile'))\r\n        } else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user])\r\n\r\n\r\nconst submitHandler =(e) =>{\r\n    e.preventDefault()\r\n    if (password !== confirmPassword){\r\n        setMessage('Password doesnot match')\r\n    } else{\r\ndispatch(updateUserProfile({id:user._id, name, email, password}))\r\n}\r\n}\r\n    return (\r\n        \r\n         <Row>\r\n             <Col md={3}>\r\n             <h2>User Profile</h2>\r\n             {message && <Message variant ='danger'>{message}</Message>}\r\n             {error && <Message variant ='danger'>{error}</Message>}\r\n             {success && <Message variant ='success'>Profile Updated</Message>}\r\n             \r\n             {loading && <Loader />}\r\n             <Form onSubmit={submitHandler}>\r\n                 <Form.Group controlId='name'>\r\n                     <Form.Label>Name</Form.Label>\r\n                     <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='email'>\r\n                     <Form.Label>Email Address</Form.Label>\r\n                     <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='password'>\r\n                     <Form.Label>Password</Form.Label>\r\n                     <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                     <Form.Label>Confirm Password</Form.Label>\r\n                     <Form.Control type='password' placeholder='Renter password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                 </Form.Group>\r\n                 <Button type='submit' variant='primary'>\r\n                     Update\r\n                 </Button>\r\n                 </Form>\r\n             </Col>\r\n             <Col md={9}>\r\n                 <h2>My Orders</h2>\r\n             </Col>\r\n         </Row>\r\n    )\r\n}\r\nexport default ProfileScreen\r\n","C:\\Users\\simron\\Desktop\\ecommerceproject\\frontend\\src\\screens\\ShippingScreen.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":4,"column":51,"nodeType":"130","messageId":"131","endLine":4,"endColumn":64},{"ruleId":"128","severity":1,"message":"132","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":23,"column":4,"nodeType":"135","endLine":23,"endColumn":30,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":85,"column":31,"nodeType":"139","messageId":"140","endLine":85,"endColumn":102,"fix":"141"},{"ruleId":"128","severity":1,"message":"142","line":8,"column":9,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":33,"column":18,"nodeType":"145","messageId":"146","endLine":33,"endColumn":20},{"ruleId":"128","severity":1,"message":"147","line":23,"column":11,"nodeType":"130","messageId":"131","endLine":23,"endColumn":28},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'ListGroupItem' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-whitespace-before-property","Unexpected whitespace before property toFixed.","MemberExpression","unexpectedWhitespace",{"range":"151","text":"152"},"'login' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'userUpdateProfile' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},[3490,3492],".","Update the dependencies array to be: [cartItems, dispatch, productId, qty]",{"range":"155","text":"156"},[734,760],"[cartItems, dispatch, productId, qty]"]